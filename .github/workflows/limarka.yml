name: Limarka Workflow

on:
  push:
    branches: ["master"]
  workflow_dispatch:
    inputs:
      enable_deploy:
        description: "Habilitar a implanta√ß√£o? (true/false)"
        required: true
        default: "false"

jobs:
  markdown-lint:
    name: Validation files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: DavidAnson/markdownlint-cli2-action@v9
        with:
          command: config
          globs: |
            .markdownlint.yml
            pages/**/*.md
            article/**/*.md

  build-limarka:
    runs-on: ubuntu-latest
    container:
      image: docker://reinanhs/limarka-help:1.0.0

    steps:
      - uses: actions/checkout@v4

      - name: Run Commands
        run: |
          limarka check
          limarka --version
          limarka-help
          mkdir -p dist
          mv build/* ./dist/
          ls ./dist
      - name: Archive limarka artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-limarka
          path: dist
          retention-days: 1

  build-marp:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure build dir exists
        run: mkdir -p dist-slide

      - name: Dowload theme
        run: wget https://raw.githubusercontent.com/reinanhs/marp-theme-academic/main/themes/academic.css

      - name: Marp Build (HTML)
        uses: docker://marpteam/marp-cli:v3.3.0
        with:
          args: slide-deck.md --theme academic.css -o dist-slide/xxx-slide.html
        env:
          MARP_USER: root:root
          LANG: "pt_BR.UTF-8"

      - name: Marp Build (PDF)
        uses: docker://marpteam/marp-cli:v3.3.0
        with:
          args: slide-deck.md --theme academic.css --allow-local-files -o dist-slide/xxx-slide.pdf
        env:
          MARP_USER: root:root
          LANG: "pt_BR.UTF-8"

      - name: Marp Build (PPTX)
        uses: docker://marpteam/marp-cli:v3.3.0
        with:
          args: slide-deck.md --theme academic.css --allow-local-files -o dist-slide/xxx-slide.pptx
        env:
          MARP_USER: root:root
          LANG: "pt_BR.UTF-8"

      - name: Archive marp artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-marp
          path: dist-slide
          retention-days: 1

  optimization-files:
    needs: [build-limarka, build-marp]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-limarka

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-marp

      - name: Instala√ß√£o do ghostscript
        run: |
          sudo apt-get update
          sudo apt-get install -y ghostscript

      - name: Otimiza√ß√£o do arquivo do Limarka
        run: ps2pdf -dPDFSETTINGS=/printer xxx-trabalho-academico.pdf xxx-trabalho-academico-printer.pdf

      - name: Otimiza√ß√£o do arquivo do Marp
        run: ps2pdf -dPDFSETTINGS=/printer xxx-slide.pdf xxx-slide-printer.pdf

      - name: Arquivos para publica√ß√£o
        uses: actions/upload-artifact@v4
        with:
          name: optimization-files
          path: |
            xxx-trabalho-academico-printer.pdf
            xxx-slide-printer.pdf
            xxx-slide.pptx
          retention-days: 90
          compression-level: 8

  build-page:
    if: ${{ github.event.inputs.enable_deploy == 'true' }}
    needs: [build-limarka, build-marp, optimization-files]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-limarka

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: optimization-files

      - name: Otimiza√ß√£o do arquivo em PDF
        run: |
          echo "Compara√ß√£o inicial" && ls -al | grep .pdf
          rm xxx-trabalho-academico.pdf
          mv xxx-trabalho-academico-printer.pdf xxx-trabalho-academico.pdf
          echo "Compara√ß√£o final" && ls -al | grep .pdf

      - name: Download slide artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-marp
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: reinanhs/limarka-render-html:v0.1.3
          options: |
            -v ${{ github.workspace }}:/var/www/html/data
            -e APP_BASE_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
            -e GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }}
            -e GITHUB_REPOSITORY=${{ github.event.repository.name }}
          run: |
            cd /var/www/html
            cp data/configuracao.yaml .
            mkdir -p source/assets/files/
            cp data/xxx-* source/assets/files/
            cp data/pages/*.md source/_pages
            vendor/bin/jigsaw build
            mv build_local/assets/files/xxx-slide/index.html build_local/slide.html
            rm build_local/assets/files/xxx-slide
            mkdir -p data/build
            cp build_local/* data/build -r
      - name: Altera√ß√£o do nome dos bot√µes
        env:
          GITHUB_OWNER: ${{ github.repository_owner }}
          GITHUB_REPO: ${{ github.event.repository.name }}
        run: |
          ls -al build
          sudo sed -i '0,/Visualizar PDF/s//Visualizar Slide/' build/index.html
          sudo sed -i '0,/Visualizar PDF/s//Visualizar Artigo/' build/index.html
          sudo sed -i "s|location.href = 'https://${GITHUB_OWNER}.github.io/${GITHUB_REPO}/assets/files/xxx-slide.pdf'|location.href = 'https://${GITHUB_OWNER}.github.io/${GITHUB_REPO}/slide'|" build/index.html
      - name: Archive limarka artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-page
          path: build
          retention-days: 1

  deploy:
    if: ${{ github.event.inputs.enable_deploy == 'true' }}
    needs: build-page
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build-page
          path: build
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
